{"version":3,"sources":["../../src/dev3-sdk.ts"],"names":["ethers","Dev3ChainlinkSDK","rpcURL","feeds","feed","__async","_a","roundData"],"mappings":"6MAAA,OAAS,UAAAA,MAAc,SAGhB,IAAMC,EAAN,KAAiD,CAcpD,YAAYC,EAAgBC,EAAU,CAVtC,KAAQ,uBAAyB,CAC7B,oDACA,+DACA,qDACA,6JACA,gJACJ,EAKI,KAAK,UAAY,IAAIH,EAAO,UAAU,gBAAgBE,EAAQC,EAAM,OAAO,EAC3E,KAAK,MAAQA,CACjB,CAEM,cAAcC,EAA0B,QAAAC,EAAA,sBAtBlD,IAAAC,EA4BQ,IAAMC,EAAY,MALW,IAAIP,EAAO,SACpCI,EAAK,QACL,KAAK,uBACL,KAAK,SACT,EAC6C,gBAAgB,EAS7D,MARmC,CAC/B,QAASG,EAAU,CAAC,EACpB,OAAQA,EAAU,CAAC,EACnB,UAAWA,EAAU,CAAC,EACtB,UAAWA,EAAU,CAAC,EACtB,gBAAiBA,EAAU,CAAC,EAC5B,cAAcD,EAAAF,EAAK,OAAL,KAAAE,EAAa,EAC/B,CAEJ,GACJ","sourcesContent":["import { ethers } from 'ethers';\nimport { PriceFeedItemModel, PriceFeedModel, RoundDataModel } from \"../types/price-feeds-model\"\n\nexport class Dev3ChainlinkSDK<T extends PriceFeedModel> {\n\n    feeds: T\n\n    private _aggregatorV3Interface = [\n        \"function decimals() external view returns (uint8)\",\n        \"function description() external view returns (string memory)\",\n        \"function version() external view returns (uint256)\",\n        \"function getRoundData(uint80 _roundId) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\",\n        \"function latestRoundData() external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound)\"\n    ]\n\n    private _provider;\n\n    constructor(rpcURL: string, feeds: T) {\n        this._provider = new ethers.providers.JsonRpcProvider(rpcURL, feeds.network)\n        this.feeds = feeds\n    }\n\n    async getFromOracle(feed: PriceFeedItemModel) {\n        const AggregatorV3Contract = new ethers.Contract(\n            feed.address, \n            this._aggregatorV3Interface, \n            this._provider\n        )\n        const roundData = await AggregatorV3Contract.latestRoundData()\n        const mappedData: RoundDataModel = {\n            roundID: roundData[0],\n            answer: roundData[1],\n            startedAt: roundData[2],\n            updatedAt: roundData[3],\n            answeredInRound: roundData[4],\n            dataFeedName: feed.name ?? \"\"\n        }\n        return mappedData\n    }\n}\n\n"]}